/**
 * √âv√©nement guildMemberAdd - D√©clench√© quand un membre rejoint le serveur
 */

import { Events } from 'discord.js';
import { getConfig } from '../services/dataService.js';
import { welcomeEmbed } from '../services/embedFormatter.js';
import logger from '../services/logger.js';

export default {
  name: Events.GuildMemberAdd,
  async execute(member) {
    try {
      logger.info(`üë§ Nouveau membre: ${member.user.tag} sur ${member.guild.name}`);
      
      const config = await getConfig();
      
      // Attribuer le r√¥le de bienvenue
      if (config.welcomeRoleId) {
        try {
          const role = member.guild.roles.cache.get(config.welcomeRoleId);
          if (role) {
            await member.roles.add(role);
            logger.info(`‚úÖ R√¥le ${role.name} attribu√© √† ${member.user.tag}`);
          } else {
            logger.warn(`‚ö†Ô∏è R√¥le de bienvenue ${config.welcomeRoleId} introuvable`);
          }
        } catch (error) {
          logger.error('‚ùå Erreur lors de l\'attribution du r√¥le de bienvenue:', error);
        }
      }
      
      // Envoyer le message de bienvenue
      if (config.welcomeChannelId) {
        try {
          const channel = member.guild.channels.cache.get(config.welcomeChannelId);
          if (channel) {
            const embed = welcomeEmbed(member);
            await channel.send({ embeds: [embed] });
            logger.info(`‚úÖ Message de bienvenue envoy√© pour ${member.user.tag}`);
          } else {
            logger.warn(`‚ö†Ô∏è Salon de bienvenue ${config.welcomeChannelId} introuvable`);
          }
        } catch (error) {
          logger.error('‚ùå Erreur lors de l\'envoi du message de bienvenue:', error);
        }
      }
      
    } catch (error) {
      logger.error('‚ùå Erreur dans guildMemberAdd:', error);
    }
  }
};
